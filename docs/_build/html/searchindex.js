Search.setIndex({"docnames": ["edamame.classifier", "edamame.eda", "edamame.regressor", "index", "modules"], "filenames": ["edamame.classifier.rst", "edamame.eda.rst", "edamame.regressor.rst", "index.rst", "modules.rst"], "titles": ["edamame.classifier", "edamame.eda", "edamame.regressor", "Edamame", "edamame"], "terms": {"class": [0, 2, 3], "trainclassifi": [0, 3, 4], "x_train": [0, 1, 2, 3, 4], "y_train": [0, 1, 2, 3, 4], "x_test": [0, 1, 2, 3, 4], "y_test": [0, 1, 2, 3, 4], "sourc": [0, 1, 2], "base": [0, 1, 2, 3], "object": [0, 1, 2, 3], "thi": [0, 2, 3], "repres": [0, 1, 2], "pipelin": [0, 2, 3], "train": [0, 2, 3], "handl": [0, 1, 2, 3], "model": [0, 1, 2, 3], "The": [0, 1, 2, 3], "input": [0, 1, 2, 3], "data": [0, 1, 2, 3], "type": [0, 1, 2, 3], "pd": [0, 1, 2, 3], "datafram": [0, 1, 2, 3], "target": [0, 1, 2, 3], "seri": [0, 1, 2, 3], "test": [0, 1, 2, 3], "exampl": [0, 1, 2], "from": [0, 1, 2, 3], "import": [0, 1, 2, 3], "logist": [0, 3, 4], "model_metr": [0, 2, 3, 4], "model_nam": [0, 2, 3], "logisitc": 0, "model_sav": 0, "nb": 0, "gaussian_nb": [0, 3, 4], "knn": [0, 3, 4], "tree": [0, 2, 3, 4], "rf": [0, 2, 3], "random_forest": [0, 2, 3, 4], "xgb": [0, 2], "xgboost": [0, 2, 3, 4], "svm": [0, 3, 4], "us": [0, 1, 2, 3], "automl": [0, 2, 3], "auto_ml": [0, 2, 3, 4], "save_model": [0, 2, 3, 4], "n_fold": [0, 2], "int": [0, 1, 2], "5": [0, 1, 2, 3], "liter": [0, 2], "list": [0, 1, 2], "perform": [0, 1, 2, 3], "autom": [0, 2], "machin": [0, 2, 3], "learn": [0, 2, 3], "cross": [0, 2], "valid": [0, 2], "paramet": [0, 1, 2], "number": [0, 1, 2, 3], "fold": [0, 2], "default": [0, 1, 2], "dataset": [0, 1, 2, 3], "must": [0, 2], "either": [0, 2], "return": [0, 1, 2, 3], "best": [0, 2, 3], "fit": [0, 2, 3], "each": [0, 2, 3], "algorithm": [0, 2], "model_list": [0, 2], "kwarg": [0, 2], "gaussiannb": 0, "gaussian": 0, "naiv": [0, 3], "bay": [0, 3], "arbitrari": [0, 2], "keyword": [0, 2], "argument": [0, 2], "pass": [0, 1, 2, 3], "constructor": [0, 2], "n_neighbor": 0, "tupl": [0, 1, 2], "1": [0, 1, 2, 3], "50": [0, 1, 2], "kneighborsclassifi": 0, "k": [0, 3], "nearest": [0, 3], "neighbor": [0, 3], "grid": 0, "search": [0, 3], "find": 0, "valu": [0, 1, 2, 3], "hyperparamet": [0, 2], "A": [0, 1, 2], "three": [0, 3], "integ": [0, 1, 2], "first": 0, "second": 0, "ar": [0, 1, 2], "rang": [0, 2, 3], "third": 0, "i": [0, 1, 2, 3], "gener": [0, 2], "interv": 0, "0": [0, 1, 2], "found": [0, 2], "3": [0, 1, 2], "logisticregress": 0, "regress": [0, 1, 3, 4], "all": [0, 1, 2, 3], "guassian_nb": 0, "cm": 0, "bool": [0, 1, 2], "fals": [0, 1], "none": [0, 1, 2], "displai": [0, 1, 2, 3], "metric": [0, 2, 3], "confus": 0, "matrix": [0, 1, 3], "report": 0, "specifi": [0, 2], "name": [0, 1, 2], "whether": 0, "n_estim": [0, 2], "10": [0, 1, 2], "100": [0, 1, 2], "2": [0, 1, 2, 3], "1000": [0, 2, 3], "randomforestclassifi": 0, "random": [0, 1, 2, 3], "forest": [0, 2, 3], "save": [0, 1, 2, 3], "instanc": [0, 2], "pickl": [0, 1, 2, 3], "file": [0, 2, 3], "linear": [0, 2, 3, 4], "lasso": [0, 2, 3, 4], "ridg": [0, 2, 3, 4], "arg": 0, "svc": 0, "an": [0, 1, 2, 3], "variabl": [0, 1, 3], "length": 0, "kernel": 0, "c": [0, 1], "gamma": 0, "auto": 0, "alpha": [0, 2], "float": [0, 1, 2], "001": [0, 2], "impur": [0, 2], "1e": [0, 2], "05": [0, 2], "decisiontreeclassifi": 0, "decis": [0, 2, 3], "contain": [0, 1, 2, 3], "minimum": [0, 2], "maximum": [0, 1, 2], "ccp_alpha": [0, 2], "try": 0, "min_impurity_decreas": [0, 2], "00001": [0, 2], "xgbclassifi": 0, "boost": 0, "round": 0, "classifier_metr": [0, 3, 4], "x": [0, 1, 2, 3], "y": [0, 1, 2, 3], "function": [0, 1, 2], "union": [0, 1, 2], "featur": [0, 1, 2, 3], "classifierdiagnos": [0, 3, 4], "classifiers_diagnos": 0, "class_prediction_error": [0, 4], "train_data": [0, 2], "true": [0, 1, 2], "plot": [0, 1, 2, 3], "method": [0, 1, 3], "show": [0, 1], "support": [0, 3], "sampl": 0, "stack": 0, "bar": 0, "chart": 0, "segment": 0, "proport": 0, "predict": [0, 3], "includ": [0, 2, 3], "neg": 0, "posit": [0, 1], "like": [0, 1], "defin": [0, 2], "you": [0, 2, 3], "want": [0, 1, 2], "barplot": 0, "plot_roc_auc": [0, 4], "roc": 0, "curv": 0, "calcul": [0, 3], "auc": 0, "given": [0, 2], "random_forest_fi": [0, 2, 3, 4], "figsiz": [0, 1, 2], "12": [0, 2], "xgboost_fi": [0, 2, 4], "14": [0, 2], "check_random_forest": [0, 2, 4], "check": [0, 1, 2, 3], "rais": [0, 1, 2], "typeerror": [0, 1, 2], "If": [0, 1, 2], "check_xgboost": [0, 2, 4], "xgbregressor": [0, 2], "correlation_categor": [1, 3, 4], "chi": [1, 3], "squar": [1, 3], "independ": [1, 3], "between": [1, 2, 3], "categor": [1, 3], "panda": [1, 3], "df": 1, "categori": 1, "b": 1, "4": 1, "category_2": 1, "a2": 1, "b2": 1, "correlation_pearson": [1, 3, 4], "threshold": 1, "pearson": [1, 3], "": [1, 3], "correl": [1, 3], "column": [1, 3], "pair": [1, 3], "onli": 1, "higher": 1, "than": 1, "shown": 1, "set": [1, 2], "num_col": 1, "qual_col": 1, "variables_typ": 1, "correlation_phik": [1, 3, 4], "theori": 1, "paper": [1, 3], "link": [1, 3], "http": 1, "arxiv": 1, "org": 1, "pdf": 1, "1811": 1, "11440": 1, "boolean": 1, "insight": 1, "phik": [1, 3], "index": [1, 3], "By": 1, "describe_distribut": [1, 3, 4], "result": [1, 3], "describ": [1, 3], "appli": [1, 3], "divid": [1, 3], "numer": [1, 3], "dimens": [1, 3, 4], "row": [1, 3], "drop_column": [1, 3, 4], "col": [1, 3], "str": 1, "select": [1, 3], "drop": 1, "string": 1, "handling_miss": [1, 3, 4], "missing_v": 1, "nan": 1, "modifi": [1, 3], "It": 1, "easi": 1, "after": [1, 3], "execut": 1, "miss": [1, 3, 4], "na": 1, "equal": 1, "np": [1, 2], "can": [1, 2, 3], "other": 1, "mean": 1, "median": 1, "most_frequ": 1, "noth": 1, "wa": 1, "indic": 1, "fewer": 1, "lead": 1, "autocomplet": 1, "process": [1, 2], "numpi": [1, 3], "value_2": 1, "nan_quant": 1, "nan_qual": 1, "zero_col": 1, "len": 1, "o": 1, "too": 1, "mani": 1, "zero": 1, "identify_typ": [1, 3, 4], "dtype": 1, "quant_col": 1, "inspect": [1, 3, 4], "bin": 1, "6": [1, 2], "interact": [1, 3, 4], "analys": [1, 3], "distribut": [1, 3], "distinct": [1, 3], "cardin": [1, 3], "determin": 1, "have": 1, "histogram": 1, "size": [1, 2], "relationship": [1, 3], "scatterplot": [1, 2, 3], "follow": [1, 3], "element": [1, 3], "tabl": 1, "percentag": 1, "record": 1, "everi": 1, "duplic": 1, "modify_cardin": [1, 3, 4], "which": [1, 2, 3], "we": [1, 3], "data_cpi": 1, "num_to_categor": [1, 3, 4], "transform": [1, 3], "convert": [1, 3], "num_variable_studi": [1, 3, 4], "epsilon": 1, "0001": [1, 2], "log": [1, 2, 3], "sqrt": [1, 3], "box": [1, 3], "cox": [1, 3], "studi": 1, "constant": 1, "non": 1, "strictli": 1, "plot_categor": [1, 3, 4], "sequenc": [1, 3], "plot_numer": [1, 3, 4], "split_and_sc": [1, 3, 4], "minmaxscal": 1, "two": [1, 3], "regressor": [1, 4], "predictor": [1, 3], "respons": [1, 3], "In": 1, "addit": 1, "step": [1, 2], "standard": [1, 3], "scale": [1, 3, 4], "view_cardin": [1, 3, 4], "especi": 1, "help": 1, "uniqu": [1, 3], "dataframe_review": [1, 4], "dummy_control": [1, 4], "encod": [1, 3], "dummi": 1, "oh": [1, 3, 4], "load_model": [1, 3, 4], "path": [1, 3], "load": [1, 3], "previous": 1, "format": [1, 3], "pkl": [1, 3], "arrai": [1, 3], "ndarrai": 1, "label": 1, "one": [1, 2, 3], "hot": [1, 3], "sklearn": [1, 3], "iri": [1, 3], "load_iri": [1, 3], "y_ohe": 1, "normalis": [1, 3], "standardscal": 1, "trasfom": 1, "setup": [1, 3, 4], "seed": 1, "42": [1, 3], "25": 1, "produc": 1, "train_test_split": 1, "regressordiagnos": [2, 3, 4], "trainregressor": [2, 3, 4], "coeffici": [2, 3, 4], "prediction_error": [2, 3, 4], "residual_plot": [2, 3, 4], "qqplot": [2, 3, 4], "linearregress": 2, "need": 2, "decisiontreeregressor": 2, "randomforestregressor": 2, "8": 2, "scatterpolot": 2, "ygt": 2, "ypred": 2, "prediction_erro": 2, "residu": [2, 3], "tune": 2, "r2": 2, "mse": 2, "mae": 2, "both": 2, "200": 2, "estim": 2, "gridsearchcv": 2, "them": 2, "when": 2, "evalu": [2, 3], "provid": [2, 3], "start": 2, "stop": 2, "num": 2, "where": 2, "end": 2, "within": 2, "regression_metr": [2, 3, 4], "comput": [2, 3], "inspir": 3, "packag": 3, "profil": 3, "pycaret": 3, "yellowbrick": 3, "goal": 3, "user": 3, "friendli": 3, "conduct": 3, "exploratori": 3, "analysi": 3, "well": 3, "analyz": 3, "batteri": 3, "classif": [3, 4], "problem": 3, "To": 3, "instal": 3, "pip": 3, "work": 3, "correctli": 3, "insid": 3, "jupyt": 3, "notebook": 3, "consist": 3, "respect": 3, "see": 3, "out": 3, "folder": 3, "repositori": 3, "wide": 3, "With": 3, "easili": 3, "explor": 3, "manipul": 3, "your": 3, "descript": 3, "statist": 3, "prepar": 3, "offer": 3, "identifi": 3, "view": 3, "ani": 3, "present": 3, "replac": 3, "remov": 3, "specif": 3, "he": 3, "design": 3, "sever": 3, "differ": 3, "These": 3, "print": 3, "upload": 3, "its": 3, "new": 3, "diagnos": [3, 4], "error": 3, "creat": 3, "qq": 3, "make_regress": 3, "n_sampl": 3, "n_featur": 3, "n_target": 3, "random_st": 3, "f1": 3, "f2": 3, "f3": 3, "f4": 3, "f5": 3, "x_train_": 3, "x_test_": 3, "clasif": 3, "gaussina": 3, "vector": 3, "feature_nam": 3, "svm_upload": 3, "add": 3, "page": 3, "eda": 4, "tool": 4, "classifi": 4}, "objects": {"edamame.classifier": [[0, 0, 0, "-", "classification"], [0, 0, 0, "-", "diagnose"]], "edamame.classifier.classification": [[0, 1, 1, "", "TrainClassifier"], [0, 4, 1, "", "classifier_metrics"]], "edamame.classifier.classification.TrainClassifier": [[0, 2, 1, "", "X_test"], [0, 2, 1, "", "X_train"], [0, 3, 1, "", "auto_ml"], [0, 3, 1, "", "gaussian_nb"], [0, 3, 1, "", "knn"], [0, 3, 1, "", "logistic"], [0, 3, 1, "", "model_metrics"], [0, 3, 1, "", "random_forest"], [0, 3, 1, "", "save_model"], [0, 3, 1, "", "svm"], [0, 3, 1, "", "tree"], [0, 3, 1, "", "xgboost"], [0, 2, 1, "", "y_test"], [0, 2, 1, "", "y_train"]], "edamame.classifier.diagnose": [[0, 1, 1, "", "ClassifierDiagnose"], [0, 4, 1, "", "check_random_forest"], [0, 4, 1, "", "check_xgboost"]], "edamame.classifier.diagnose.ClassifierDiagnose": [[0, 2, 1, "", "X_test"], [0, 2, 1, "", "X_train"], [0, 3, 1, "", "class_prediction_error"], [0, 3, 1, "", "plot_roc_auc"], [0, 3, 1, "", "random_forest_fi"], [0, 3, 1, "", "xgboost_fi"], [0, 2, 1, "", "y_test"], [0, 2, 1, "", "y_train"]], "edamame.eda": [[1, 0, 0, "-", "eda"], [1, 0, 0, "-", "tools"]], "edamame.eda.eda": [[1, 4, 1, "", "correlation_categorical"], [1, 4, 1, "", "correlation_pearson"], [1, 4, 1, "", "correlation_phik"], [1, 4, 1, "", "describe_distribution"], [1, 4, 1, "", "dimensions"], [1, 4, 1, "", "drop_columns"], [1, 4, 1, "", "handling_missing"], [1, 4, 1, "", "identify_types"], [1, 4, 1, "", "inspection"], [1, 4, 1, "", "interaction"], [1, 4, 1, "", "missing"], [1, 4, 1, "", "modify_cardinality"], [1, 4, 1, "", "num_to_categorical"], [1, 4, 1, "", "num_variable_study"], [1, 4, 1, "", "plot_categorical"], [1, 4, 1, "", "plot_numerical"], [1, 4, 1, "", "split_and_scaling"], [1, 4, 1, "", "view_cardinality"]], "edamame.eda.tools": [[1, 4, 1, "", "dataframe_review"], [1, 4, 1, "", "dummy_control"], [1, 4, 1, "", "load_model"], [1, 4, 1, "", "ohe"], [1, 4, 1, "", "scaling"], [1, 4, 1, "", "setup"]], "edamame.regressor": [[2, 0, 0, "-", "diagnose"], [2, 0, 0, "-", "regression"]], "edamame.regressor.diagnose": [[2, 1, 1, "", "RegressorDiagnose"], [2, 4, 1, "", "check_random_forest"], [2, 4, 1, "", "check_xgboost"]], "edamame.regressor.diagnose.RegressorDiagnose": [[2, 2, 1, "", "X_test"], [2, 2, 1, "", "X_train"], [2, 3, 1, "", "coefficients"], [2, 3, 1, "", "prediction_error"], [2, 3, 1, "", "qqplot"], [2, 3, 1, "", "random_forest_fi"], [2, 3, 1, "", "residual_plot"], [2, 3, 1, "", "xgboost_fi"], [2, 2, 1, "", "y_test"], [2, 2, 1, "", "y_train"]], "edamame.regressor.regression": [[2, 1, 1, "", "TrainRegressor"], [2, 4, 1, "", "regression_metrics"]], "edamame.regressor.regression.TrainRegressor": [[2, 2, 1, "", "X_test"], [2, 2, 1, "", "X_train"], [2, 3, 1, "", "auto_ml"], [2, 3, 1, "", "lasso"], [2, 3, 1, "", "linear"], [2, 3, 1, "", "model_metrics"], [2, 3, 1, "", "random_forest"], [2, 3, 1, "", "ridge"], [2, 3, 1, "", "save_model"], [2, 3, 1, "", "tree"], [2, 3, 1, "", "xgboost"], [2, 2, 1, "", "y_test"], [2, 2, 1, "", "y_train"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"edamam": [0, 1, 2, 3, 4], "classifi": [0, 3], "classif": 0, "diagnos": [0, 2], "eda": [1, 3], "tool": 1, "regressor": [2, 3], "regress": 2, "function": 3, "modul": 3, "exampl": 3, "todo": 3, "content": 3, "indic": 3, "tabl": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"edamame.classifier": [[0, "edamame-classifier"]], "classification": [[0, "module-edamame.classifier.classification"]], "diagnose": [[0, "module-edamame.classifier.diagnose"], [2, "module-edamame.regressor.diagnose"]], "edamame.eda": [[1, "edamame-eda"]], "eda": [[1, "module-edamame.eda.eda"]], "tools": [[1, "module-edamame.eda.tools"]], "edamame.regressor": [[2, "edamame-regressor"]], "regression": [[2, "module-edamame.regressor.regression"]], "Edamame": [[3, "edamame"]], "Functionalities": [[3, "functionalities"]], "Eda module": [[3, "eda-module"]], "Regressor module": [[3, "regressor-module"]], "Example:": [[3, "example"], [3, "id1"]], "Classifier module": [[3, "classifier-module"]], "Todos": [[3, "todos"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "edamame": [[4, "edamame"]]}, "indexentries": {"classifierdiagnose (class in edamame.classifier.diagnose)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose"]], "trainclassifier (class in edamame.classifier.classification)": [[0, "edamame.classifier.classification.TrainClassifier"]], "x_test (edamame.classifier.classification.trainclassifier attribute)": [[0, "edamame.classifier.classification.TrainClassifier.X_test"]], "x_test (edamame.classifier.diagnose.classifierdiagnose attribute)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.X_test"]], "x_train (edamame.classifier.classification.trainclassifier attribute)": [[0, "edamame.classifier.classification.TrainClassifier.X_train"]], "x_train (edamame.classifier.diagnose.classifierdiagnose attribute)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.X_train"]], "auto_ml() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.auto_ml"]], "check_random_forest() (in module edamame.classifier.diagnose)": [[0, "edamame.classifier.diagnose.check_random_forest"]], "check_xgboost() (in module edamame.classifier.diagnose)": [[0, "edamame.classifier.diagnose.check_xgboost"]], "class_prediction_error() (edamame.classifier.diagnose.classifierdiagnose method)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.class_prediction_error"]], "classifier_metrics() (in module edamame.classifier.classification)": [[0, "edamame.classifier.classification.classifier_metrics"]], "edamame.classifier.classification": [[0, "module-edamame.classifier.classification"]], "edamame.classifier.diagnose": [[0, "module-edamame.classifier.diagnose"]], "gaussian_nb() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.gaussian_nb"]], "knn() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.knn"]], "logistic() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.logistic"]], "model_metrics() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.model_metrics"]], "module": [[0, "module-edamame.classifier.classification"], [0, "module-edamame.classifier.diagnose"], [1, "module-edamame.eda.eda"], [1, "module-edamame.eda.tools"], [2, "module-edamame.regressor.diagnose"], [2, "module-edamame.regressor.regression"]], "plot_roc_auc() (edamame.classifier.diagnose.classifierdiagnose method)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.plot_roc_auc"]], "random_forest() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.random_forest"]], "random_forest_fi() (edamame.classifier.diagnose.classifierdiagnose method)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.random_forest_fi"]], "save_model() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.save_model"]], "svm() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.svm"]], "tree() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.tree"]], "xgboost() (edamame.classifier.classification.trainclassifier method)": [[0, "edamame.classifier.classification.TrainClassifier.xgboost"]], "xgboost_fi() (edamame.classifier.diagnose.classifierdiagnose method)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.xgboost_fi"]], "y_test (edamame.classifier.classification.trainclassifier attribute)": [[0, "edamame.classifier.classification.TrainClassifier.y_test"]], "y_test (edamame.classifier.diagnose.classifierdiagnose attribute)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.y_test"]], "y_train (edamame.classifier.classification.trainclassifier attribute)": [[0, "edamame.classifier.classification.TrainClassifier.y_train"]], "y_train (edamame.classifier.diagnose.classifierdiagnose attribute)": [[0, "edamame.classifier.diagnose.ClassifierDiagnose.y_train"]], "correlation_categorical() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.correlation_categorical"]], "correlation_pearson() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.correlation_pearson"]], "correlation_phik() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.correlation_phik"]], "dataframe_review() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.dataframe_review"]], "describe_distribution() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.describe_distribution"]], "dimensions() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.dimensions"]], "drop_columns() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.drop_columns"]], "dummy_control() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.dummy_control"]], "edamame.eda.eda": [[1, "module-edamame.eda.eda"]], "edamame.eda.tools": [[1, "module-edamame.eda.tools"]], "handling_missing() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.handling_missing"]], "identify_types() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.identify_types"]], "inspection() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.inspection"]], "interaction() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.interaction"]], "load_model() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.load_model"]], "missing() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.missing"]], "modify_cardinality() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.modify_cardinality"]], "num_to_categorical() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.num_to_categorical"]], "num_variable_study() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.num_variable_study"]], "ohe() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.ohe"]], "plot_categorical() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.plot_categorical"]], "plot_numerical() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.plot_numerical"]], "scaling() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.scaling"]], "setup() (in module edamame.eda.tools)": [[1, "edamame.eda.tools.setup"]], "split_and_scaling() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.split_and_scaling"]], "view_cardinality() (in module edamame.eda.eda)": [[1, "edamame.eda.eda.view_cardinality"]], "regressordiagnose (class in edamame.regressor.diagnose)": [[2, "edamame.regressor.diagnose.RegressorDiagnose"]], "trainregressor (class in edamame.regressor.regression)": [[2, "edamame.regressor.regression.TrainRegressor"]], "x_test (edamame.regressor.diagnose.regressordiagnose attribute)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.X_test"]], "x_test (edamame.regressor.regression.trainregressor attribute)": [[2, "edamame.regressor.regression.TrainRegressor.X_test"]], "x_train (edamame.regressor.diagnose.regressordiagnose attribute)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.X_train"]], "x_train (edamame.regressor.regression.trainregressor attribute)": [[2, "edamame.regressor.regression.TrainRegressor.X_train"]], "auto_ml() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.auto_ml"]], "check_random_forest() (in module edamame.regressor.diagnose)": [[2, "edamame.regressor.diagnose.check_random_forest"]], "check_xgboost() (in module edamame.regressor.diagnose)": [[2, "edamame.regressor.diagnose.check_xgboost"]], "coefficients() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.coefficients"]], "edamame.regressor.diagnose": [[2, "module-edamame.regressor.diagnose"]], "edamame.regressor.regression": [[2, "module-edamame.regressor.regression"]], "lasso() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.lasso"]], "linear() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.linear"]], "model_metrics() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.model_metrics"]], "prediction_error() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.prediction_error"]], "qqplot() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.qqplot"]], "random_forest() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.random_forest"]], "random_forest_fi() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.random_forest_fi"]], "regression_metrics() (in module edamame.regressor.regression)": [[2, "edamame.regressor.regression.regression_metrics"]], "residual_plot() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.residual_plot"]], "ridge() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.ridge"]], "save_model() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.save_model"]], "tree() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.tree"]], "xgboost() (edamame.regressor.regression.trainregressor method)": [[2, "edamame.regressor.regression.TrainRegressor.xgboost"]], "xgboost_fi() (edamame.regressor.diagnose.regressordiagnose method)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.xgboost_fi"]], "y_test (edamame.regressor.diagnose.regressordiagnose attribute)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.y_test"]], "y_test (edamame.regressor.regression.trainregressor attribute)": [[2, "edamame.regressor.regression.TrainRegressor.y_test"]], "y_train (edamame.regressor.diagnose.regressordiagnose attribute)": [[2, "edamame.regressor.diagnose.RegressorDiagnose.y_train"]], "y_train (edamame.regressor.regression.trainregressor attribute)": [[2, "edamame.regressor.regression.TrainRegressor.y_train"]]}})